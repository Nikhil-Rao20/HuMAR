# HuMAR-GREF Training Configuration
# Train on testB split, validate on testB split

_BASE_: Base-COCO-InstanceSegmentation.yaml

MODEL:
  META_ARCHITECTURE: "GRES"  # GRES model for referring expression segmentation

  # Backbone Configuration
  BACKBONE:
    NAME: "build_d2_resnet_backbone"
  RESNETS:
    DEPTH: 50
    OUT_FEATURES: ["res2", "res3", "res4", "res5"]

  # Segmentation Head Configuration
  SEM_SEG_HEAD:
    NAME: "ReferringHead"
    IGNORE_VALUE: 255
    NUM_CLASSES: 1  # Binary segmentation for referring expressions
    LOSS_WEIGHT: 1.0
    CONVS_DIM: 256
    MASK_DIM: 256
    NORM: "GN"
    # pixel decoder
    PIXEL_DECODER_NAME: "MSDeformAttnPixelDecoder"
    IN_FEATURES: ["res2", "res3", "res4", "res5"]
    DEFORMABLE_TRANSFORMER_ENCODER_IN_FEATURES: ["res3", "res4", "res5"]
    COMMON_STRIDE: 4
    TRANSFORMER_ENC_LAYERS: 6

  MASK_FORMER:
    TRANSFORMER_DECODER_NAME: "MultiScaleMaskedReferringDecoder"
    TRANSFORMER_IN_FEATURE: "multi_scale_pixel_decoder"
    DEEP_SUPERVISION: True
    LANG_ATT_WEIGHT: 0.1
    NO_OBJECT_WEIGHT: 0.1
    CLASS_WEIGHT: 2.0
    MASK_WEIGHT: 5.0
    DICE_WEIGHT: 5.0
    HIDDEN_DIM: 256
    NUM_OBJECT_QUERIES: 100
    NHEADS: 8
    DROPOUT: 0.0
    DIM_FEEDFORWARD: 2048
    ENC_LAYERS: 0
    PRE_NORM: False
    ENFORCE_INPUT_PROJ: False
    SIZE_DIVISIBILITY: 32
    DEC_LAYERS: 10
    TRAIN_NUM_POINTS: 12544
    OVERSAMPLE_RATIO: 3.0
    IMPORTANCE_SAMPLE_RATIO: 0.75
    TEST:
      SEMANTIC_ON: False
      INSTANCE_ON: True
      PANOPTIC_ON: False
      OVERLAP_THRESHOLD: 0.8
      OBJECT_MASK_THRESHOLD: 0.8

  # Enable keypoints for the HuMAR dataset
  KEYPOINT_ON: True
  ROI_KEYPOINT_HEAD:
    NUM_KEYPOINTS: 17  # COCO-style keypoints
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: "ROIAlignV2"

INPUT:
  IMAGE_SIZE: 512  # Good size for detailed keypoint detection
  DATASET_MAPPER_NAME: "humar_gref_mapper"
  FORMAT: "RGB"
  MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MAX_SIZE_TEST: 1333

DATASETS:
  TRAIN: ("humar_gref_testB",)  # Train on testB split as requested
  TEST: ("humar_gref_testB",)   # Validate on testB split as requested

SOLVER:
  IMS_PER_BATCH: 8   # Batch size - adjust based on GPU memory
  BASE_LR: 0.0001    # Conservative learning rate for initial training
  STEPS: (15, 25)    # Learning rate decay steps (at 10 and 16.7 epochs)
  MAX_ITER: 30       # Total training iterations (~20 epochs with 12 images)
  WARMUP_ITERS: 3    # Warmup for first 2 epochs
  WARMUP_FACTOR: 0.001
  WEIGHT_DECAY: 0.05
  OPTIMIZER: "ADAMW"

  # Learning schedule
  LR_SCHEDULER_NAME: "WarmupMultiStepLR"

  # Gradient clipping for stability
  CLIP_GRADIENTS:
    ENABLED: True
    CLIP_TYPE: "value"
    CLIP_VALUE: 0.01
    NORM_TYPE: 2.0

  # Checkpointing
  CHECKPOINT_PERIOD: 10  # Save model every ~6.7 epochs

DATALOADER:
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 4  # Adjust based on your system
  SAMPLER_TRAIN: "TrainingSampler"

TEST:
  EVAL_PERIOD: 5  # Evaluate every 5 iterations (~3.3 epochs)

# Referring expression specific config
REFERRING:
  BERT_TYPE: "bert-base-uncased"
  MAX_TOKENS: 20

OUTPUT_DIR: "./output/humar_gref_training"

# Model weights - using COCO pretrained Faster R-CNN to avoid layer conflicts
MODEL:
  WEIGHTS: "detectron2://COCO-Detection/faster_rcnn_R_50_FPN_3x/137849458/model_final_280758.pkl"